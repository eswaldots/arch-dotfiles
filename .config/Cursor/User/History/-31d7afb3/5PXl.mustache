precision mediump float;
varying vec2 v_texcoord;
uniform sampler2D tex;

uniform float time;

uniform vec2 topLeft;
uniform vec2 fullSize;

void main() {
    // Sample the texture
    vec4 color = texture2D(tex, v_texcoord);
    
    // Define matte color (#282828)
    vec3 matte = vec3(0.157, 0.157, 0.157);
    float threshold = 0.1;  // Equivalent to _Thresh
    float cutoff = 0.5;    // Equivalent to _Cutoff
    
    // Calculate the range for color matching
    vec3 keyMinus = matte - vec3(threshold);
    vec3 keyPlus = matte + vec3(threshold);
    
    // Check if color falls within the matte range
    if (color.r > keyMinus.r && color.r < keyPlus.r &&
        color.g > keyMinus.g && color.g < keyPlus.g &&
        color.b > keyMinus.b && color.b < keyPlus.b) 
    {
        // If color matches matte, use cutoff value
        gl_FragColor = vec4(color.rgb, cutoff);
    } 
    else 
    {
        // Otherwise use slightly less than cutoff
        gl_FragColor = vec4(color.rgb, max(0.0, cutoff - 0.01));
    }
}