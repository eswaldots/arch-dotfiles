precision mediump float;
varying vec2 v_texcoord;
uniform sampler2D tex;

uniform float time;

uniform vec2 topLeft;
uniform vec2 fullSize;

void main() {
    vec4 pixColor = texture2D(tex, v_texcoord);
    
    // #282828 converted to normalized RGB (40/255)
    vec3 keyColor = vec3(0.1568627451, 0.1568627451, 0.1568627451);
    float threshold = 0.01;  // Very precise threshold
    
    // Check each channel individually
    float diffR = abs(pixColor.r - keyColor.r);
    float diffG = abs(pixColor.g - keyColor.g);
    float diffB = abs(pixColor.b - keyColor.b);
    
    // If all channels are within threshold, make transparent
    if (diffR < threshold && diffG < threshold && diffB < threshold) {
        pixColor.a = 0.0;
    }
    
    gl_FragColor = pixColor;
}