precision mediump float;
varying vec2 v_texcoord;
uniform sampler2D tex;

uniform float time;

uniform vec2 topLeft;
uniform vec2 fullSize;

void main() {
    vec4 pixColor = texture2D(tex, v_texcoord);
    
    // Target color (#282828) - converted to sRGB space
    vec3 keyColor = vec3(0.157, 0.157, 0.157);
    float threshold = 0.1;  // Increased threshold for better matching
    
    // Calculate color similarity (inverse of difference)
    float similarity = 1.0 - (
        abs(pixColor.r - keyColor.r) +
        abs(pixColor.g - keyColor.g) +
        abs(pixColor.b - keyColor.b)
    ) / 3.0;
    
    // If color is similar to target, reduce alpha
    // The closer the color is to target, the more transparent it becomes
    float targetAlpha = 1.0 - (similarity * (1.0 / threshold));
    targetAlpha = clamp(targetAlpha, 0.0, 1.0);
    
    // Output color with modified alpha
    gl_FragColor = vec4(pixColor.rgb, targetAlpha);
}